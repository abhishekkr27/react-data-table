{"version":3,"sources":["component/TableData.js","App.js","index.js"],"names":["CustomerList","useState","customerData","setcustomerData","React","open","setOpen","name","setName","username","setUsername","email","setEmail","phone","setPhone","website","setWebsite","columns","field","headerName","width","editable","renderCell","id","Button","style","backgroundColor","padding","onClick","handleDelete","variant","color","type","useEffect","getData","a","axios","get","response","data","handleClose","list","splice","Grid","container","direction","justify","alignItems","item","md","Dialog","disableBackdropClick","onClose","DialogTitle","noValidate","onSubmit","e","preventDefault","console","log","value","newCustomer","Math","floor","random","DialogContent","TextField","onChange","event","target","autoFocus","margin","label","fullWidth","required","DialogActions","height","rows","pageSize","checkboxSelection","disableSelectionOnClick","App","className","TableData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77163e02.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst CustomerList = () => {\r\n  const [customerData, setcustomerData] = useState([])\r\n  const [open, setOpen] = React.useState(false);\r\n  const [name, setName] = React.useState(\"\");\r\n  const [username, setUsername] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [phone, setPhone] = React.useState(\"\");\r\n  const [website, setWebsite] = React.useState(\"\");\r\n\r\n\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'id' },\r\n    { field: 'name', headerName: 'Name', width: 200, editable: true },\r\n    { field: 'username', headerName: 'Username', width: 150, editable: true },\r\n    { field: 'email', headerName: 'Email', width: 210, editable: true },\r\n    { field: 'phone', headerName: 'Phone No.', width: 180, editable: true },\r\n    { field: 'website', headerName: 'Website', width: 150, editable: true },\r\n    {\r\n      field: \"action\",\r\n      headerName: \"Action\",\r\n      width: 250,\r\n\r\n      renderCell: (id) => (\r\n        <>\r\n          {/* <Button\r\n            style={{\r\n              backgroundColor: \"#ffcc00\",\r\n              marginRight: 40,\r\n              padding: \"3px 35px\"\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Edit\r\n          </Button> */}\r\n\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"#e8605d\",\r\n              padding: \"3px 35px\"\r\n            }}\r\n            onClick={() => handleDelete(id)}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Delete\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n  const getData = async () => {\r\n\r\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n    setcustomerData(response.data)\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const list = [...customerData];\r\n    list.splice(id, 1);\r\n    setcustomerData(list);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.value);\r\n    const newCustomer = {\r\n      id: Math.floor(Math.random()* 999),\r\n      name: name,\r\n      username: username,\r\n      email: email,\r\n      phone: phone,\r\n      website: website,\r\n    };\r\n    setcustomerData([...customerData, newCustomer]);\r\n    console.log(`user data is ${newCustomer}`);\r\n    console.log(customerData);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item md={8}></Grid>\r\n\r\n        <Grid item md={4}>\r\n          <Button\r\n            onClick={handleClickOpen}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Add New Customer\r\n          </Button>\r\n\r\n          <Dialog\r\n            disableBackdropClick\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Add New Customer</DialogTitle>\r\n            <form noValidate onSubmit={handleSubmit}>\r\n              <DialogContent>\r\n                <TextField\r\n                  value={name}\r\n                  onChange={(event) => setName(event.target.value)}\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  required\r\n                />\r\n                <TextField\r\n                  value={username}\r\n                  onChange={(event) => setUsername(event.target.value)}\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  required\r\n                />\r\n                <TextField\r\n                  value={email}\r\n                  onChange={(event) => setEmail(event.target.value)}\r\n                  margin=\"dense\"\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  type=\"email\"\r\n                  fullWidth\r\n                  required\r\n                />\r\n                <TextField\r\n                  value={phone}\r\n                  onChange={(event) => setPhone(event.target.value)}\r\n                  margin=\"dense\"\r\n                  id=\"phone\"\r\n                  label=\"Phone No.\"\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  required\r\n                />\r\n                <TextField\r\n                  value={website}\r\n                  onChange={(event) => setWebsite(event.target.value)}\r\n                  margin=\"dense\"\r\n                  id=\"website\"\r\n                  label=\"Website\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  required\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={handleClose} color=\"primary\" type=\"submit\">\r\n                  Add\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n          </Dialog>\r\n        </Grid>\r\n      </Grid>\r\n      <div style={{ height: 450, width: '100%' }}>\r\n        <DataGrid\r\n          rows={customerData}\r\n          columns={columns}\r\n          pageSize={6}\r\n          checkboxSelection={false}\r\n          disableSelectionOnClick={true}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default CustomerList;","import './App.css';\nimport TableData from './component/TableData';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TableData />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}